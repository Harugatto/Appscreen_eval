{"version":3,"sources":["asset/Profile.jpg","asset/back.png","components/Navbutton.js","components/navbar.js","pages/Profile.js","pages/Home.js","pages/NotFound.js","pages/Blogs.js","pages/BlogPost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","styled","span","Navbuttons","props","context","Background","div","Wrapper","Title","h1","NavBar","title","style","textDecoration","to","ProfileWrapper","ImageWrapper","ProfileImageBackground","ProfileImage","img","ProfileTextWrapper","NameText","Text","Profile","src","profileImage","alt","MainText","StyledDiv","NotFound","PostList","InfoWrapper","StyledButton","a","ArticleTitle","ArticleInfo","p","PlaceHolder","Article","href","link","description","date","Blogs","useState","tableData","setTableData","useEffect","fetch","then","res","json","notionTableData","filter","blog","status","getTableData","map","index","slug","key","StyledBackButton","BackButtonWrapper","BlogPost","blockMap","setBlockMap","blogNameToId","blogSlug","blogsDatabase","pop","id","match","params","blogTitle","blogId","blogData","getBlogInfo","fullPage","Back","App","TransitionGroup","CSSTransition","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.719cb173.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Profile.62e6d1b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/back.b5ad2b13.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst Context = styled.span`\n    display: flex;\n    font-size: 110%;\n    color: white;\n    font-family: \"Noto Sans KR\";\n    text-transform: uppercase;\n    font-weight: bold;\n    padding: 1rem 1rem 1.1rem 1rem;\n\n    &:hover {\n        color: #bababa;\n    }\n`\n\nexport default function Navbuttons(props) {\n    return (\n        <Context>\n            {props.context}\n        </Context>\n    )\n}\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport Navbuttons from './Navbutton'\nimport { NavLink } from 'react-router-dom'\n\nconst Background = styled.div`\n    display: inline-flex;\n    position: fixed;\n    top: 0;\n    justify-content: start;\n    align-items: center;\n    height: 6vh;\n    width: 100vw;\n    margin: 0;\n    background: #833ab4;\n    background: -webkit-linear-gradient(to right, #fcb045, #fd1d1d, #833ab4);\n    background: linear-gradient(to right, #fcb045, #fd1d1d, #833ab4);\n    z-index: 100;\n    box-shadow: 1.5px 1.5px 5px 0px rgba(107,107,107,1);\n`\n\nconst Wrapper = styled.div`\n    display: inline-flex;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    margin-right: 1rem;\n`\n\nconst Title = styled.h1`\n    display: flex;\n    font-size: 170%;\n    color: white;\n    font-family: \"Noto Sans KR\";\n    padding: 1rem 1rem 1.3rem 1rem;\n`\n\nexport default function NavBar(props) {\n    return (\n        <Fragment>\n            <Background>\n                <Title>\n                    {props.title}\n                </Title>\n                <Wrapper>\n                    <NavLink style={{textDecoration: 'none'}} to=\"/\">\n                        <Navbuttons context=\"Profile\" />\n                    </NavLink>\n                    <NavLink style={{textDecoration: 'none'}} to=\"/blog\">\n                        <Navbuttons context=\"Blog\" />\n                    </NavLink>\n                </Wrapper>\n            </Background>\n        </Fragment>\n    );\n}","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport NavBar from '../components/navbar'\nimport profileImage from '../asset/Profile.jpg'\n\nconst ProfileWrapper = styled.div`\n    display: flex;\n    height: 94vh;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n`\n\nconst ImageWrapper = styled.div`\n    display: flex;\n    width: 50vw;\n    flex-direction: row-reverse;\n    margin-right: 10vw;\n`\n\nconst ProfileImageBackground = styled.div`\n    display: flex;\n    height: 320px;\n    width: 320px;\n    border-radius: 50%;\n    background: #833ab4;\n    background: -webkit-linear-gradient(to right top, #fcb045, #fd1d1d, #833ab4);\n    background: linear-gradient(to right top, #fcb045, #fd1d1d, #833ab4);\n    box-shadow: 1px 1px 5px 0px rgba(107,107,107,1);\n`\n\nconst ProfileImage = styled.img`\n    display: flex;\n    margin: 10px;\n    height: 300px;\n    width: 300px;\n    border-radius: 50%;\n    object-fit: cover;\n`\n\nconst ProfileTextWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 94vh;\n    width: 50vw;\n`\n\nconst NameText = styled.span`\n    display: flex;\n    font-size: 50px;\n    font-weight: bold;\n    margin: 1em 0 0.5em 0;\n    background: linear-gradient(to left, #833ab4, #fd1d1d, #fcb045);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    height: 40vh;\n    align-items: flex-end;\n`\n\nconst Text = styled.span`\n    font-family: \"Noto Sans KR\";\n    height: 57vh;\n`\n\nexport default function Profile() {\n    return (\n        <Fragment>\n            <NavBar title=\"üòò\"/>\n            <ProfileWrapper>\n                <ImageWrapper>\n                    <ProfileImageBackground>\n                        <ProfileImage src={ profileImage } alt=\"Proifle IMG\"/>\n                    </ProfileImageBackground>\n                </ImageWrapper>\n                <ProfileTextWrapper>\n                    <NameText>\n                        Profile\n                    </NameText>\n                    <Text>\n                        üòÉ KDMHS 18th Hacking Defence<br />\n                        üéÇ 2003.04.19 <br />\n                        ‚úâÔ∏è jihojiho2003@gmail.com<br />\n                        üí° TRUST - Hacking Defence Club <br />\n                        üí° BMW - Benedu Math Worriors <br />\n                        üèÜ The Hacking Championship Junior 2019 - 3rd Prize \n                    </Text>\n                </ProfileTextWrapper>\n            </ProfileWrapper>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport NavBar from '../components/navbar'\n\nconst TitleText = styled.span`\n    font-size: 50px;\n    font-weight: bold;\n    margin: 0.2em;\n    background: linear-gradient(to left, #833ab4, #fd1d1d, #fcb045);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n`\n\nconst TitleWrapper = styled.div`\n    background-color: #f0f0f0;\n    border-radius: 15px;\n`\n\nconst MainText = styled.span`\n    font-size: 16px;\n    font-weight: bold;\n    font-family: \"Noto Sans KR\";\n    margin: 1em 0 1em 0;\n`\n\nconst StyledDiv = styled.div`\n    display: flex;\n    position: absolute;\n    bottom: 0px;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 92vh;\n    width: 100vw;\n`\n\nexport default function Home() {\n    return (\n        <Fragment>\n            <NavBar title=\"üòò\" />\n            <StyledDiv>\n                <TitleWrapper>\n                    <TitleText>\n                        HARUGATTO\n                    </TitleText>\n                </TitleWrapper>\n                <MainText>\n                </MainText>\n            </StyledDiv>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst MainText = styled.span`\n    display: flex;\n    font-size: 72px;\n    font-family: \"Noto Sans KR\";\n    font-weight: bold;\n`\n\nconst StyledDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 92vh;\n    width: 100vw;\n`\n\nexport default function NotFound() {\n    return (\n        <StyledDiv>\n            <MainText>\n                Page Not Found\n            </MainText>\n        </StyledDiv>\n    )\n}\n","import React, { Fragment, useState, useEffect } from 'react'\nimport NavBar from '../components/navbar'\nimport styled from 'styled-components'\n\nconst ListWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100vw;\n    height: 25vh;\n`\n\nconst PostList = styled.div`\n    display: flex;\n    background-color: white;\n    border-radius: 8px;\n    width: 60vw;\n    margin: 0 20vw 5vh 20vw;\n    align-items: center;\n    padding-left: 2vw;\n    box-shadow: 1.5px 1.5px 5px 0px rgba(107,107,107,1);\n\n    &:hover {\n        background-color: #bababa;\n    }\n`\n\nconst InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-content: space-around;\n    justify-content: flex-start;\n    height: 20vh;\n`\n\nconst StyledButton = styled.a`\n    color: black;\n`\n\nconst ArticleTitle = styled.h1`\n    background: linear-gradient(to left, #833ab4, #fd1d1d, #fcb045);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    font-family: \"Noto Sans KR\";\n    margin-top: 0.5em;\n`\n\nconst ArticleInfo = styled.p`\n    font-family: \"Noto Sans KR\";\n    margin-top: 0.1px;\n`\n\nconst PlaceHolder = styled.span`\n    display: flex;\n    height: 10vh;\n`\n\nfunction Article(props) {\n    return (\n        <Fragment>\n                <StyledButton href={props.link} style={{ textDecoration: 'none' }}>\n                    <PostList>\n                        <InfoWrapper>\n                            <ArticleTitle>{props.title}</ArticleTitle>\n                            <ArticleInfo>{props.description}</ArticleInfo>\n                            <ArticleInfo>{props.date}</ArticleInfo>\n                        </InfoWrapper>\n                    </PostList>\n                </StyledButton>\n        </Fragment>\n    )\n}\n\nexport default function Blogs(props) {\n    const [tableData, setTableData] = useState([])\n\n    useEffect(() => {\n        async function getTableData() {\n        const notionTableData = await fetch(\n            \"https://notion-api.splitbee.io/v1/table/1cede97c79674f2c993bafbadb46122f\"\n        ).then(res => res.json())\n\n        setTableData(notionTableData.filter(blog => blog.status === 'live'));\n        }\n\n        getTableData();\n    }, [])\n\n    return (\n        <Fragment>\n            <NavBar title=\"üòò\" />\n            <PlaceHolder />\n            <div>\n            {tableData.map((blog, index) => {\n                return (\n                <Article\n                    title={blog.title}\n                    description={blog.description}\n                    date={blog.date}\n                    link={'/blog/' + blog.slug}\n                    key={index}\n                />\n                )\n            })}\n            </div>\n        </Fragment>\n    )\n}","import React, { Fragment, useState, useEffect } from 'react';\nimport { NotionRenderer } from \"react-notion\";\nimport NavBar from '../components/navbar';\nimport { NavLink } from 'react-router-dom';\nimport Back from '../asset/back.png';\nimport styled from 'styled-components';\n\nimport \"react-notion/src/styles.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nconst StyledBackButton = styled.img`\n    display: flex;\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n    border-radius: 50%;\n    border: 3px solid #f0f0f0;\n    padding: 10px;\n    align-items: flex-end;\n`\nconst BackButtonWrapper = styled.div`\n    position: fixed;\n    bottom: 50px;\n    right: 50px;\n    display: flex;\n    flex-direction: row-reverse;\n    height: 50px;\n`\n\nexport default function BlogPost(props) {\n\n    const [blockMap, setBlockMap] = useState(\"\")\n\n    const blogNameToId = async (blogSlug) => {\n        const blogsDatabase = await fetch(\n            \"https://notion-api.splitbee.io/v1/table/1cede97c79674f2c993bafbadb46122f\"\n        ).then(res => res.json())\n\n        try {\n            const blog = blogsDatabase.filter(blog => blog.slug === blogSlug).pop()\n            return blog.id\n        } catch {\n            return null\n        }\n    }\n\n    useEffect(() => {\n        async function getBlogInfo() {\n            const blogId = await blogNameToId(props.match.params.blogTitle)\n            const blogData = await fetch(\n                \"https://notion-api.splitbee.io/v1/page/\" + blogId\n            ).then(res => res.json())\n\n            setBlockMap(blogData)\n        }\n        getBlogInfo()\n    }, [])\n\n    return (\n        <Fragment>\n            <NavBar title=\"üòò\" />\n            <NotionRenderer fullPage blockMap={blockMap} />\n            <BackButtonWrapper>\n            <NavLink to=\"/blog\">\n                <StyledBackButton src={ Back } alt=\"BackButton\" />\n            </NavLink>\n            </BackButtonWrapper>\n        </Fragment>\n    )\n}","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { Profile, NotFound, Blogs, BlogPost } from './pages'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport styled, { keyframes } from 'styled-components'\n\nexport default function App() {\n    return (\n        <div>\n            <TransitionGroup>\n                <CSSTransition>\n                    <Switch>\n                        <Route exact path=\"/\" component={ Profile } />\n                        <Route exact path=\"/blog\" component={ Blogs } />\n                        <Route exact path=\"/blog/:blogTitle\" component={ BlogPost } />\n                        <Route path=\"/notfound\" component={ NotFound } />\n                        <Redirect path=\"*\" to=\"/notfound\"/>\n                    </Switch>\n                </CSSTransition>\n            </TransitionGroup>\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}